phase1_for_correlation <- dat %>% filter(phase == 1 & Method != "Objective")
correlation_phase1 <- data.frame(matrix(NA, nrow = nrow(phase1_for_correlation), ncol = 5))
colnames(correlation_phase1) <- c("X", "ResponseId", "domain", "phase1_cor_twelve", "phase1_cor_six")
# Getting the Objective Values
objective <- dat %>%
filter(Method == "Objective", phase == 1) %>%
select(domain:Month.12)
# Getting Phase 1 Data both for Academics and General Population
phase1_for_correlation <- dat %>% filter(phase == 1 & Method != "Objective")
# Creating an empty dataset to store correlation coefficients
correlation_phase1 <- data.frame(matrix(NA, nrow = nrow(phase1_for_correlation), ncol = 5))
colnames(correlation_phase1) <- c("X", "ResponseId", "domain", "phase1_cor_twelve", "phase1_cor_six")
# Looping the Phase 1 data
for (i in 1:nrow(phase1_for_correlation)) {
temp_dat <- phase1_for_correlation[i,] # data for each team, each domain
# key variables to connect correlation coefficients with the original dataset
temp_X <- temp_dat$X # X value in the dataset
temp_responseid <- temp_dat$ResponseId # ResponseId in the dataset
temp_domain <- temp_dat$domain # Domain name in the dataset
# Reshape the Objective data from wide to long
task_actual <- subset(objective, domain == temp_domain) %>%
pivot_longer(!domain, names_to="month", values_to="actual")
# Reshape the team and the domain data from wide to long
team_task_estimates <- temp_dat %>%
select(domain:Month.12) %>%
pivot_longer(!domain, names_to="month", values_to="estimate")
# Combine the objective data and estimates data
temp_combined <- left_join(team_task_estimates, task_actual, by = c("domain", "month"))
# Getting correlation coefficient for 12 months data (Month1 through Month12)
phase1_cor_twelve <- with(temp_combined, cor(estimate, actual, method = c("pearson"), use = "pairwise.complete.obs"))
# Getting correlation coefficient for last 6 months data (Month7 through Month12)
phase1_cor_last_six <- with(temp_combined[7:12,], cor(estimate, actual, method = c("pearson"), use = "pairwise.complete.obs"))
# Adding the correlation coefficients to the empty data frame for each team and for each domain
correlation_phase1[i,] <- c(temp_X, temp_responseid, temp_domain, phase1_cor_twelve, phase1_cor_last_six)
}
View(correlation_phase1)
i <- 34
temp_dat <- phase1_for_correlation[i,] # data for each team, each domain
View(temp_combined)
View(temp_dat)
# key variables to connect correlation coefficients with the original dataset
temp_X <- temp_dat$X # X value in the dataset
temp_responseid <- temp_dat$ResponseId # ResponseId in the dataset
temp_domain <- temp_dat$domain # Domain name in the dataset
# Reshape the Objective data from wide to long
task_actual <- subset(objective, domain == temp_domain) %>%
pivot_longer(!domain, names_to="month", values_to="actual")
# Reshape the team and the domain data from wide to long
team_task_estimates <- temp_dat %>%
select(domain:Month.12) %>%
pivot_longer(!domain, names_to="month", values_to="estimate")
View(team_task_estimates)
correlation_phase1 %>% arrange(domain)
correlation_phase1 <- correlation_phase1 %>% arrange(domain)
View(task_actual)
View(objective)
View(dat)
dat[2213,]
test <- dat[2213,]
i <- 185
temp_dat <- phase1_for_correlation[i,] # data for each team, each domain
# key variables to connect correlation coefficients with the original dataset
temp_X <- temp_dat$X # X value in the dataset
temp_responseid <- temp_dat$ResponseId # ResponseId in the dataset
temp_domain <- temp_dat$domain # Domain name in the dataset
# Reshape the Objective data from wide to long
task_actual <- subset(objective, domain == temp_domain) %>%
pivot_longer(!domain, names_to="month", values_to="actual")
# Reshape the team and the domain data from wide to long
team_task_estimates <- temp_dat %>%
select(domain:Month.12) %>%
pivot_longer(!domain, names_to="month", values_to="estimate")
# Combine the objective data and estimates data
temp_combined <- left_join(team_task_estimates, task_actual, by = c("domain", "month"))
with(temp_combined, cor(estimate, actual, method = c("pearson"), use = "pairwise.complete.obs"))
temp_combined
temp_combined$estimate
temp_combined$estimate %>% format(long)
sd(temp_combined$estimate)
cov(temp_combined$estimate, temp_combined$actual)
sd(temp_combined$estimate, temp_combined$actual)
with(temp_combined, cor(estimate, actual, method = c("pearson"), use = "pairwise.complete.obs"))
library(correlation)
temp_combined %>% correlation()
temp_combined %>% correlation(use = "pairwise.complete.obs")
temp_combined %>% correlation(use = "pairwise.complete.obs")$r
temp_combined %>% correlation(use = "pairwise.complete.obs")
test <- temp_combined %>% correlation(use = "pairwise.complete.obs")
View(test)
test$r
temp_combined %>% cor(., use="pairwise.complete.obs")
cor(temp_combined$estimate, temp_combined$actual, use="pairwise.complete.obs")
test <- temp_combined %>% correlation(use = "pairwise.complete.obs") %>% select(r)
temp_combined %>% correlation(use = "pairwise.complete.obs") %>% select(r)
temp_combined %>% correlation(use = "pairwise.complete.obs") %>% select(r)
temp_combined %>% correlation(use = "pairwise.complete.obs")
test <- temp_combined %>% correlation(use = "pairwise.complete.obs")
View(test)
test <- temp_combined %>% select(!domain) %>% correlation(use = "pairwise.complete.obs")
correlation(temp_combined$estimate, temp_combined$actual)
?correlation
correlation(temp_combined, estimate, actual)
correlation(temp_combined$estimate, temp_combined$actual)
cor(temp_combined$estimate, temp_combined$actual)
i
cor(temp_combined$estimate, temp_combined$actual)
cor(temp_combined$estimate, temp_combined$actual, method='pearson', use='pairwise.complete.obs')
temp_combined$estimate
temp_combined$actual
?cor
cor.test(temp_combined$estimate, temp_combined$actual)
cor.test(temp_combined$estimate, temp_combined$actual, use = "pairwise.complete.obs")
cor.test
?cor.test
temp_combined %>% cor.test(use="pairwise.complete.obs")
temp_combined %>% select(!c(domain, month)) %>% cor.test(use="pairwise.complete.obs")
temp_combined %>% select(!c("domain", "month")) %>% cor.test(use="pairwise.complete.obs")
temp_combined %>% select(!c("domain", "month")) %>% cor.test(., use="pairwise.complete.obs")
View(correlation_phase1)
View(phase1_for_correlation)
with(temp_combined, estimate, actual)
with(temp_combined, cor.test(estimate, actual))
with(temp_combined, cor.test(estimate, actual)) %>% select(r)
test <- with(temp_combined, cor.test(estimate, actual))
test
test$statistic
test$parameter
test$estimate
test <- with(temp_combined, cor.test(estimate, actual)) %>% select(estimate)
test <- with(temp_combined, cor.test(estimate, actual)) |> select(estimate)
test <- with(temp_combined, cor.test(estimate, actual)) |> dplyr::select(estimate)
test <- with(temp_combined, cor.test(estimate, actual)) %>% select(., estimate)
test
with(temp_combined, cor.test(estimate, actual)) %>% select(., estimate)
with(temp_combined, cor.test(estimate, actual)) %>% select(., "estimate")
a <- with(temp_combined, cor.test(estimate, actual)) %>% select(., "estimate")
a
test
test$estimate
a <- test$estimate
a
a
data.frame(a)
a <- data.frame(a)
View(a)
with(temp_combined, cor(estimate, actual, use="pairwise.complete.osbs"))
with(temp_combined, cor(estimate, actual, use="pairwise.complete.obs"))
with(temp_combined, correlation(estimate, actual, use="pairwise.complete.obs"))
with(temp_combined, correlation(c(estimate, actual), use="pairwise.complete.obs"))
with(temp_combined, correlation(cbind(estimate, actual), use="pairwise.complete.obs"))
cbind(temp_combined$estimate, temp_combined$actual)
correlation(cbind(temp_combined$estimate, temp_combined$actual))
?correlation
temp_combined %>% correlation(select = "estimate", select2 = "actual")
temp_combined %>% correlation(select = "estimate", select2 = "actual", use = "pairwise.complete.obs")
temp_combined %>% correlation(select = "estimate", select2 = "actual", use = "pairwise.complete.obs") %>% select(r)
a <- temp_combined %>% correlation(select = "estimate", select2 = "actual", use = "pairwise.complete.obs") %>% select(r)
a
rm(a)
a
a <- temp_combined %>% correlation(select = "estimate", select2 = "actual", use = "pairwise.complete.obs") %>% select(r)
View(a)
View(a)
a
with(temp_combined, cor.test(estiamte, actual, use = "pairwise.complete.obs"))
with(temp_combined, cor.test(estimate, actual, use = "pairwise.complete.obs"))
with(temp_combined, cor.test(estimate, actual, use = "pairwise.complete.obs")) %>% select(estimate)
with(temp_combined, cor.test(estimate, actual, use = "pairwise.complete.obs")) %>% select(parameter)
with(temp_combined, cor.test(estimate, actual, use = "pairwise.complete.obs"))
a <- with(temp_combined, cor.test(estimate, actual, use = "pairwise.complete.obs"))
View(a)
a$estimate
b <- a$estimate
b
b[[1]]
b[1
]
sd(temp_combined$estimate)
sd(temp_combined$actual)
cor(temp_combined$actual, temp_estimate)
cor(temp_combined$actual, temp_combined$estimate)
cor(temp_combined$actual, temp_combined$estimate, use = "pairwise.complete.obs")
?cor
?cor
cor.test
?cor.test
with(temp_combined, cor(estimate, actual, method = c("pearson"), use = "pairwise.complete.obs"))
with(temp_combined, cor.test(estimate, actual, method = c("pearson"), use = "pairwise.complete.obs"))
with(temp_combined, cor.test(estimate, actual, method = c("pearson"), use = "pairwise.complete.obs")) %>% select(estimate[[1]])
with(temp_combined, cor.test(estimate, actual, method = c("pearson"), use = "pairwise.complete.obs")) %>% select(parameter)
with(temp_combined, cor.test(estimate, actual, method = c("pearson"), use = "pairwise.complete.obs")) %>% select(df)
a <- with(temp_combined, cor.test(estimate, actual, method = c("pearson"), use = "pairwise.complete.obs"))
a
View(a)
a$estimate[[1]]
a <- with(temp_combined, cor.test(estimate, actual, method = c("pearson")))
# Getting the Objective Values
objective <- dat %>%
filter(Method == "Objective", phase == 1) %>%
select(domain:Month.12)
# Getting Phase 1 Data both for Academics and General Population
phase1_for_correlation <- dat %>% filter(phase == 1 & Method != "Objective")
# Creating an empty dataset to store correlation coefficients
correlation_phase1 <- data.frame(matrix(NA, nrow = nrow(phase1_for_correlation), ncol = 5))
colnames(correlation_phase1) <- c("X", "ResponseId", "domain", "phase1_cor_twelve", "phase1_cor_six")
# Looping the Phase 1 data
for (i in 1:nrow(phase1_for_correlation)) {
temp_dat <- phase1_for_correlation[i,] # data for each team, each domain
# key variables to connect correlation coefficients with the original dataset
temp_X <- temp_dat$X # X value in the dataset
temp_responseid <- temp_dat$ResponseId # ResponseId in the dataset
temp_domain <- temp_dat$domain # Domain name in the dataset
# Reshape the Objective data from wide to long
task_actual <- subset(objective, domain == temp_domain) %>%
pivot_longer(!domain, names_to="month", values_to="actual")
# Reshape the team and the domain data from wide to long
team_task_estimates <- temp_dat %>%
select(domain:Month.12) %>%
pivot_longer(!domain, names_to="month", values_to="estimate")
# Combine the objective data and estimates data
temp_combined <- left_join(team_task_estimates, task_actual, by = c("domain", "month"))
# Getting correlation coefficient for 12 months data (Month1 through Month12)
temp_phase1_cor_twelve <- with(temp_combined, cor.test(estimate, actual, method = c("pearson")))
phase1_cor_twelve <- temp_phase1_cor_twelve$estimate[[1]]
# Getting correlation coefficient for last 6 months data (Month7 through Month12)
temp_phase1_cor_last_six <- with(temp_combined[7:12,], cor(estimate, actual, method = c("pearson")))
phase1_cor_last_six <- temp_phase1_cor_last_six$estimate[[1]]
# Adding the correlation coefficients to the empty data frame for each team and for each domain
correlation_phase1[i,] <- c(temp_X, temp_responseid, temp_domain, phase1_cor_twelve, phase1_cor_last_six)
}
temp_dat <- phase1_for_correlation[i,] # data for each team, each domain
# key variables to connect correlation coefficients with the original dataset
temp_X <- temp_dat$X # X value in the dataset
temp_responseid <- temp_dat$ResponseId # ResponseId in the dataset
temp_domain <- temp_dat$domain # Domain name in the dataset
# Reshape the Objective data from wide to long
task_actual <- subset(objective, domain == temp_domain) %>%
pivot_longer(!domain, names_to="month", values_to="actual")
# Reshape the team and the domain data from wide to long
team_task_estimates <- temp_dat %>%
select(domain:Month.12) %>%
pivot_longer(!domain, names_to="month", values_to="estimate")
# Combine the objective data and estimates data
temp_combined <- left_join(team_task_estimates, task_actual, by = c("domain", "month"))
# Getting correlation coefficient for 12 months data (Month1 through Month12)
temp_phase1_cor_twelve <- with(temp_combined, cor.test(estimate, actual, method = c("pearson")))
phase1_cor_twelve <- temp_phase1_cor_twelve$estimate[[1]]
# Getting correlation coefficient for last 6 months data (Month7 through Month12)
temp_phase1_cor_last_six <- with(temp_combined[7:12,], cor.test(estimate, actual, method = c("pearson")))
phase1_cor_last_six <- temp_phase1_cor_last_six$estimate[[1]]
# Getting the Objective Values
objective <- dat %>%
filter(Method == "Objective", phase == 1) %>%
select(domain:Month.12)
# Getting Phase 1 Data both for Academics and General Population
phase1_for_correlation <- dat %>% filter(phase == 1 & Method != "Objective")
# Creating an empty dataset to store correlation coefficients
correlation_phase1 <- data.frame(matrix(NA, nrow = nrow(phase1_for_correlation), ncol = 5))
colnames(correlation_phase1) <- c("X", "ResponseId", "domain", "phase1_cor_twelve", "phase1_cor_six")
# Looping the Phase 1 data
for (i in 1:nrow(phase1_for_correlation)) {
temp_dat <- phase1_for_correlation[i,] # data for each team, each domain
# key variables to connect correlation coefficients with the original dataset
temp_X <- temp_dat$X # X value in the dataset
temp_responseid <- temp_dat$ResponseId # ResponseId in the dataset
temp_domain <- temp_dat$domain # Domain name in the dataset
# Reshape the Objective data from wide to long
task_actual <- subset(objective, domain == temp_domain) %>%
pivot_longer(!domain, names_to="month", values_to="actual")
# Reshape the team and the domain data from wide to long
team_task_estimates <- temp_dat %>%
select(domain:Month.12) %>%
pivot_longer(!domain, names_to="month", values_to="estimate")
# Combine the objective data and estimates data
temp_combined <- left_join(team_task_estimates, task_actual, by = c("domain", "month"))
# Getting correlation coefficient for 12 months data (Month1 through Month12)
temp_phase1_cor_twelve <- with(temp_combined, cor.test(estimate, actual, method = c("pearson")))
phase1_cor_twelve <- temp_phase1_cor_twelve$estimate[[1]]
# Getting correlation coefficient for last 6 months data (Month7 through Month12)
temp_phase1_cor_last_six <- with(temp_combined[7:12,], cor.test(estimate, actual, method = c("pearson")))
phase1_cor_last_six <- temp_phase1_cor_last_six$estimate[[1]]
# Adding the correlation coefficients to the empty data frame for each team and for each domain
correlation_phase1[i,] <- c(temp_X, temp_responseid, temp_domain, phase1_cor_twelve, phase1_cor_last_six)
}
View(correlation_phase1)
View(correlation_phase1)
View(phase1_for_correlation)
# Academics & Phase 2
phase2_for_correlation <- dat %>%
filter(isExpert == 1 & !(phase == 1 & revised == 1)) #just academics, omitting original (non-revised phase 1) - got this from Igor
# Creating an empty dataset where correlation coefficients will be stored
correlation_phase2 <- data.frame(matrix(NA, nrow = nrow(phase2_for_correlation), ncol = 5))
colnames(correlation_phase2) <- c("X", "ResponseId", "domain", "phase2_cor_twelve", "phase2_cor_six")
for (i in 1:nrow(phase2_for_correlation)) {
temp_dat <- phase2_for_correlation[i,] # data for each team and each domain
# key variables to connect correlation coefficients with the original dataset
temp_X <- temp_dat$X # X value in the dataset
temp_responseid <- temp_dat$ResponseId # ResponseId in the dataset
temp_domain <- temp_dat$domain # task domain in the dataset
# Reshape the Objective data from wide to long
task_actual <- subset(objective, domain == temp_domain) %>%
pivot_longer(!domain, names_to="month", values_to="actual")
# Reshape the team and the domain data from wide to long
team_task_estimates <- temp_dat %>%
select(domain:Month.12) %>%
pivot_longer(!domain, names_to="month", values_to="estimate")
# Combine the objective data and estimates data
temp_combined <- left_join(team_task_estimates, task_actual, by = c("domain", "month"))
# Getting correlation coefficient for 12 months data (Month1 through Month12)
temp_phase2_cor_twelve <- with(temp_combined, cor.test(estimate, actual, method = c("pearson")))
phase2_cor_twelve <- temp_phase2_cor_twelve$estimate[[1]]
# Getting correlation coefficient for last 6 months data (Month7 through Month12)
temp_phase2_cor_last_six <- with(temp_combined[7:12,], cor.test(estimate, actual, method = c("pearson")))
phase2_cor_last_six <- temp_phase2_cor_last_six$estimate[[1]]
# Adding the correlation coefficients to the empty data frame for each team and for each domain
correlation_phase2[i,] <- c(temp_X, temp_responseid, temp_domain, phase2_cor_twelve, phase2_cor_last_six)
}
# Merge correlation tables from both phases
correlation_table_full <- full_join(correlation_phase1, correlation_phase2, by=c("X", "ResponseId", "domain"))
correlation_table_full$X <- as.integer(correlation_table_full$X)
# Merge the combined correlation data table with the original dataset
dat <- left_join(dat, correlation_table_full, by=c("X", "ResponseId", "domain"))
View(correlation_phase1)
correlation_phase1 <- correlation_phase1 %>% arrange(domain)
View(objective)
# Getting the Objective Values
objective <- dat %>%
filter(Method == "Objective", phase == 1) %>%
select(domain:Month.12)
# Getting Phase 1 Data both for Academics and General Population
phase1_for_correlation <- dat %>% filter(phase == 1 & Method != "Objective")
# Creating an empty dataset to store correlation coefficients
correlation_phase1 <- data.frame(matrix(NA, nrow = nrow(phase1_for_correlation), ncol = 5))
colnames(correlation_phase1) <- c("X", "ResponseId", "domain", "phase1_cor_twelve", "phase1_cor_six")
# Looping the Phase 1 data
for (i in 1:nrow(phase1_for_correlation)) {
temp_dat <- phase1_for_correlation[i,] # data for each team, each domain
# key variables to connect correlation coefficients with the original dataset
temp_X <- temp_dat$X # X value in the dataset
temp_responseid <- temp_dat$ResponseId # ResponseId in the dataset
temp_domain <- temp_dat$domain # Domain name in the dataset
# Reshape the Objective data from wide to long
task_actual <- subset(objective, domain == temp_domain) %>%
pivot_longer(!domain, names_to="month", values_to="actual")
# Reshape the team and the domain data from wide to long
team_task_estimates <- temp_dat %>%
select(domain:Month.12) %>%
pivot_longer(!domain, names_to="month", values_to="estimate")
# Combine the objective data and estimates data
temp_combined <- left_join(team_task_estimates, task_actual, by = c("domain", "month"))
# Getting correlation coefficient for 12 months data (Month1 through Month12)
temp_phase1_cor_twelve <- with(temp_combined, cor.test(estimate, actual, method = c("pearson")))
phase1_cor_twelve <- temp_phase1_cor_twelve$estimate[[1]]
# Getting correlation coefficient for last 6 months data (Month7 through Month12)
temp_phase1_cor_last_six <- with(temp_combined[7:12,], cor.test(estimate, actual, method = c("pearson")))
phase1_cor_last_six <- temp_phase1_cor_last_six$estimate[[1]]
# Adding the correlation coefficients to the empty data frame for each team and for each domain
correlation_phase1[i,] <- c(temp_X, temp_responseid, temp_domain, phase1_cor_twelve, phase1_cor_last_six)
}
# Academics & Phase 2
phase2_for_correlation <- dat %>%
filter(isExpert == 1 & !(phase == 1 & revised == 1)) #just academics, omitting original (non-revised phase 1) - got this from Igor
# Creating an empty dataset where correlation coefficients will be stored
correlation_phase2 <- data.frame(matrix(NA, nrow = nrow(phase2_for_correlation), ncol = 5))
colnames(correlation_phase2) <- c("X", "ResponseId", "domain", "phase2_cor_twelve", "phase2_cor_six")
for (i in 1:nrow(phase2_for_correlation)) {
temp_dat <- phase2_for_correlation[i,] # data for each team and each domain
# key variables to connect correlation coefficients with the original dataset
temp_X <- temp_dat$X # X value in the dataset
temp_responseid <- temp_dat$ResponseId # ResponseId in the dataset
temp_domain <- temp_dat$domain # task domain in the dataset
# Reshape the Objective data from wide to long
task_actual <- subset(objective, domain == temp_domain) %>%
pivot_longer(!domain, names_to="month", values_to="actual")
# Reshape the team and the domain data from wide to long
team_task_estimates <- temp_dat %>%
select(domain:Month.12) %>%
pivot_longer(!domain, names_to="month", values_to="estimate")
# Combine the objective data and estimates data
temp_combined <- left_join(team_task_estimates, task_actual, by = c("domain", "month"))
# Getting correlation coefficient for 12 months data (Month1 through Month12)
temp_phase2_cor_twelve <- with(temp_combined, cor.test(estimate, actual, method = c("pearson")))
phase2_cor_twelve <- temp_phase2_cor_twelve$estimate[[1]]
# Getting correlation coefficient for last 6 months data (Month7 through Month12)
temp_phase2_cor_last_six <- with(temp_combined[7:12,], cor.test(estimate, actual, method = c("pearson")))
phase2_cor_last_six <- temp_phase2_cor_last_six$estimate[[1]]
# Adding the correlation coefficients to the empty data frame for each team and for each domain
correlation_phase2[i,] <- c(temp_X, temp_responseid, temp_domain, phase2_cor_twelve, phase2_cor_last_six)
}
# Merge correlation tables from both phases
correlation_table_full <- full_join(correlation_phase1, correlation_phase2, by=c("X", "ResponseId", "domain"))
correlation_table_full$X <- as.integer(correlation_table_full$X)
# Merge the combined correlation data table with the original dataset
dat <- left_join(dat, correlation_table_full, by=c("X", "ResponseId", "domain"))
dat <- read.csv("dat_for_analyses.csv", stringsAsFactors = FALSE) # Read the dataset
# Getting the Objective Values
objective <- dat %>%
filter(Method == "Objective", phase == 1) %>%
select(domain:Month.12)
# Getting Phase 1 Data both for Academics and General Population
phase1_for_correlation <- dat %>% filter(phase == 1 & Method != "Objective")
# Creating an empty dataset to store correlation coefficients
correlation_phase1 <- data.frame(matrix(NA, nrow = nrow(phase1_for_correlation), ncol = 5))
colnames(correlation_phase1) <- c("X", "ResponseId", "domain", "phase1_cor_twelve", "phase1_cor_six")
# Looping the Phase 1 data
for (i in 1:nrow(phase1_for_correlation)) {
temp_dat <- phase1_for_correlation[i,] # data for each team, each domain
# key variables to connect correlation coefficients with the original dataset
temp_X <- temp_dat$X # X value in the dataset
temp_responseid <- temp_dat$ResponseId # ResponseId in the dataset
temp_domain <- temp_dat$domain # Domain name in the dataset
# Reshape the Objective data from wide to long
task_actual <- subset(objective, domain == temp_domain) %>%
pivot_longer(!domain, names_to="month", values_to="actual")
# Reshape the team and the domain data from wide to long
team_task_estimates <- temp_dat %>%
select(domain:Month.12) %>%
pivot_longer(!domain, names_to="month", values_to="estimate")
# Combine the objective data and estimates data
temp_combined <- left_join(team_task_estimates, task_actual, by = c("domain", "month"))
# Getting correlation coefficient for 12 months data (Month1 through Month12)
temp_phase1_cor_twelve <- with(temp_combined, cor.test(estimate, actual, method = c("pearson")))
phase1_cor_twelve <- temp_phase1_cor_twelve$estimate[[1]]
# Getting correlation coefficient for last 6 months data (Month7 through Month12)
temp_phase1_cor_last_six <- with(temp_combined[7:12,], cor.test(estimate, actual, method = c("pearson")))
phase1_cor_last_six <- temp_phase1_cor_last_six$estimate[[1]]
# Adding the correlation coefficients to the empty data frame for each team and for each domain
correlation_phase1[i,] <- c(temp_X, temp_responseid, temp_domain, phase1_cor_twelve, phase1_cor_last_six)
}
# Academics & Phase 2
phase2_for_correlation <- dat %>%
filter(isExpert == 1 & !(phase == 1 & revised == 1)) #just academics, omitting original (non-revised phase 1) - got this from Igor
# Creating an empty dataset where correlation coefficients will be stored
correlation_phase2 <- data.frame(matrix(NA, nrow = nrow(phase2_for_correlation), ncol = 5))
colnames(correlation_phase2) <- c("X", "ResponseId", "domain", "phase2_cor_twelve", "phase2_cor_six")
for (i in 1:nrow(phase2_for_correlation)) {
temp_dat <- phase2_for_correlation[i,] # data for each team and each domain
# key variables to connect correlation coefficients with the original dataset
temp_X <- temp_dat$X # X value in the dataset
temp_responseid <- temp_dat$ResponseId # ResponseId in the dataset
temp_domain <- temp_dat$domain # task domain in the dataset
# Reshape the Objective data from wide to long
task_actual <- subset(objective, domain == temp_domain) %>%
pivot_longer(!domain, names_to="month", values_to="actual")
# Reshape the team and the domain data from wide to long
team_task_estimates <- temp_dat %>%
select(domain:Month.12) %>%
pivot_longer(!domain, names_to="month", values_to="estimate")
# Combine the objective data and estimates data
temp_combined <- left_join(team_task_estimates, task_actual, by = c("domain", "month"))
# Getting correlation coefficient for 12 months data (Month1 through Month12)
temp_phase2_cor_twelve <- with(temp_combined, cor.test(estimate, actual, method = c("pearson")))
phase2_cor_twelve <- temp_phase2_cor_twelve$estimate[[1]]
# Getting correlation coefficient for last 6 months data (Month7 through Month12)
temp_phase2_cor_last_six <- with(temp_combined[7:12,], cor.test(estimate, actual, method = c("pearson")))
phase2_cor_last_six <- temp_phase2_cor_last_six$estimate[[1]]
# Adding the correlation coefficients to the empty data frame for each team and for each domain
correlation_phase2[i,] <- c(temp_X, temp_responseid, temp_domain, phase2_cor_twelve, phase2_cor_last_six)
}
# Merge correlation tables from both phases
correlation_table_full <- full_join(correlation_phase1, correlation_phase2, by=c("X", "ResponseId", "domain"))
correlation_table_full$X <- as.integer(correlation_table_full$X)
# Merge the combined correlation data table with the original dataset
dat <- left_join(dat, correlation_table_full, by=c("X", "ResponseId", "domain"))
View(dat)
correlation_phase1 <- correlation_phase1 %>% arrange(domain)
correlation_phase2 <- correlation_phase2 %>% arrange(domain)
View(correlation_phase1)
dat[1993,]
i <- 185
dat[185,]
View(objective)
i<- 185
temp_dat <- phase2_for_correlation[i,] # data for each team and each domain
# key variables to connect correlation coefficients with the original dataset
temp_X <- temp_dat$X # X value in the dataset
temp_responseid <- temp_dat$ResponseId # ResponseId in the dataset
temp_domain <- temp_dat$domain # task domain in the dataset
# Reshape the Objective data from wide to long
task_actual <- subset(objective, domain == temp_domain) %>%
pivot_longer(!domain, names_to="month", values_to="actual")
# Reshape the team and the domain data from wide to long
team_task_estimates <- temp_dat %>%
select(domain:Month.12) %>%
pivot_longer(!domain, names_to="month", values_to="estimate")
team_task_combined
team_task_estimates
i
temp_dat <- phase1_for_correlation[i,] # data for each team, each domain
# key variables to connect correlation coefficients with the original dataset
temp_X <- temp_dat$X # X value in the dataset
temp_responseid <- temp_dat$ResponseId # ResponseId in the dataset
temp_domain <- temp_dat$domain # Domain name in the dataset
# Reshape the Objective data from wide to long
task_actual <- subset(objective, domain == temp_domain) %>%
pivot_longer(!domain, names_to="month", values_to="actual")
# Reshape the team and the domain data from wide to long
team_task_estimates <- temp_dat %>%
select(domain:Month.12) %>%
pivot_longer(!domain, names_to="month", values_to="estimate")
# Combine the objective data and estimates data
temp_combined <- left_join(team_task_estimates, task_actual, by = c("domain", "month"))
temp_combined
cor(temp_combined$estimate, temp_combined$actual)
cor(temp_combined$estimate, temp_combined$actual, use = "pairwise.complete.obs")
temp_combined
team_task_estimates
temp_dat %>% select(Month.1:Month.12)
View(temp_combined)
View(temp_dat)
cor(temp_combined$estimate, temp_combined$actual)
cor(temp_combined$estimate, temp_combined$actual, use = "pairwise.complete.obs")
