top.5.MASE.t1<-phase1 %>% filter(isExpert.factor == 'Academic')  %>%
arrange(domain,MASE1_w1) %>%group_by(domain) %>% dplyr::slice_head(n = 5) %>% select(team_name,MASE1_w1,domain,team_size.coded,discipline,previous_tournament.coded,Method.code,model,theory,numpred,parameters,Method.complex,team_expertise)
top.5.MASE.t1 %>% ggplot(aes(x = domain, y = MASE1_w1,colour = Method.code, fill=Method.code))+
#   stat_summary(fun.data="mean_cl_boot",  position=pd)+
#    facet_wrap(vars(domain), scales = "free", nrow = 4)+theme_minimal(base_size = 14) +
#   theme(legend.position="bottom") +scale_color_d3()+scale_fill_d3()+
#  labs(colour = "Sample",fill="Sample", x="Time (in months)",y="Absolute Percentage Deviation (M +/- 95%CI)")
top.5.MASE.t1 %>% arrange(MASE1_w1) %>% ggplot(aes(x=domain, y=MASE1_w1, colour=Method.code)) +
geom_point(size=3, position=pd, alpha = .7) + scale_x_discrete(labels=labels)+theme_minimal(base_size = 14) +geom_hline(yintercept =1, linetype='dashed', color='red', 14)+theme(legend.position="top")+scale_color_aaas()+labs(x="",colour="Approach",y="Inaccuracy [MASE]")
top.5.MASE.t1 %>% arrange(MASE1_w1)
top.5.MASE.t1 %>% arrange(MASE1_w1) %>% ggplot(aes(x=domain, y=MASE1_w1, colour=Method.code)) +
geom_point(size=3, position=pd, alpha = .7) + scale_x_discrete(labels=labels)+theme_minimal(base_size = 14) +geom_hline(yintercept =1, linetype='dashed', color='red', 14)+theme(legend.position="top")+scale_color_aaas()
top.5.MASE.t1 %>% ggplot(aes(x = domain, y = MASE1_w1,colour = Method.code, fill=Method.code))+
#   stat_summary(fun.data="mean_cl_boot",  position=pd)+
#    facet_wrap(vars(domain), scales = "free", nrow = 4)+theme_minimal(base_size = 14) +
#   theme(legend.position="bottom") +scale_color_d3()+scale_fill_d3()+
#  labs(colour = "Sample",fill="Sample", x="Time (in months)",y="Absolute Percentage Deviation (M +/- 95%CI)")
top.5.MASE.t1 %>%  %>% ggplot(aes(x=domain, y=MASE1_w1, colour=Method.code)) +
geom_point(size=3, position=pd, alpha = .7) + scale_x_discrete(labels=labels)+theme_minimal(base_size = 14) +geom_hline(yintercept =1, linetype='dashed', color='red', 14)+theme(legend.position="top")+scale_color_aaas()+labs(x="",colour="Approach",y="Inaccuracy [MASE]")
top.5.MASE.t1 %>% ggplot(aes(x = domain, y = MASE1_w1,colour = Method.code, fill=Method.code))+
#   stat_summary(fun.data="mean_cl_boot",  position=pd)+
#    facet_wrap(vars(domain), scales = "free", nrow = 4)+theme_minimal(base_size = 14) +
#   theme(legend.position="bottom") +scale_color_d3()+scale_fill_d3()+
#  labs(colour = "Sample",fill="Sample", x="Time (in months)",y="Absolute Percentage Deviation (M +/- 95%CI)")
top.5.MASE.t1 %>%  ggplot(aes(x=domain, y=MASE1_w1, colour=Method.code)) +
geom_point(size=3, position=pd, alpha = .7) + scale_x_discrete(labels=labels)+theme_minimal(base_size = 14) +geom_hline(yintercept =1, linetype='dashed', color='red', 14)+theme(legend.position="top")+scale_color_aaas()+labs(x="",colour="Approach",y="Inaccuracy [MASE]")
top.5.MASE.t1 %>% ggplot(aes(x = domain, y = MASE1_w1,colour = Method.code, fill=Method.code))+
#   stat_summary(fun.data="mean_cl_boot",  position=pd)+
#    facet_wrap(vars(domain), scales = "free", nrow = 4)+theme_minimal(base_size = 14) +
#   theme(legend.position="bottom") +scale_color_d3()+scale_fill_d3()+
#  labs(colour = "Sample",fill="Sample", x="Time (in months)",y="Absolute Percentage Deviation (M +/- 95%CI)")
top.5.MASE.t1 %>%  ggplot(aes(x=domain, y=MASE1_w1, colour=Method.code)) +
geom_point(size=3, position=pd, alpha = .7) + scale_x_discrete(labels=labels)+theme_minimal(base_size = 14) +geom_hline(yintercept =1, linetype='dashed', color='red', 14)+theme(legend.position="top")+scale_color_aaas()+labs(x="",colour="Approach",y="Inaccuracy [MASE]")
top.5.MASE.t1 %>%  ggplot(aes(x=domain, y=MASE1_w1, colour=Method.code)) +
geom_point(size=3, position=pd, alpha = .7) + scale_x_discrete(labels=labels)+theme_minimal(base_size = 14) +geom_hline(yintercept =1, linetype='dashed', color='red', 14)+theme(legend.position="top")+scale_color_aaas()
top.5.MASE.t1 %>% ggplot(aes(x = domain, y = MASE1_w1,colour = Method.code, fill=Method.code))+
#   stat_summary(fun.data="mean_cl_boot",  position=pd)+
#    facet_wrap(vars(domain), scales = "free", nrow = 4)+theme_minimal(base_size = 14) +
#   theme(legend.position="bottom") +scale_color_d3()+scale_fill_d3()+
#  labs(colour = "Sample",fill="Sample", x="Time (in months)",y="Absolute Percentage Deviation (M +/- 95%CI)")
top.5.MASE.t1 %>%  ggplot(aes(x=domain, y=MASE1_w1, colour=Method.code)) +
geom_point(size=3, position=pd, alpha = .7) + scale_x_discrete(labels=labels)+theme_minimal(base_size = 14) +geom_hline(yintercept =1, linetype='dashed', color='red', 14)+theme(legend.position="top")+scale_color_aaas()+labs(x="",colour="Approach",y="Inaccuracy [MASE]")
top.5.MASE.t1 %>% ggplot(aes(x = domain, y = MASE1_w1,colour = Method.code, fill=Method.code))+
#   stat_summary(fun.data="mean_cl_boot",  position=pd)+
#    facet_wrap(vars(domain), scales = "free", nrow = 4)+theme_minimal(base_size = 14) +
#   theme(legend.position="bottom") +scale_color_d3()+scale_fill_d3()+
#  labs(colour = "Sample",fill="Sample", x="Time (in months)",y="Absolute Percentage Deviation (M +/- 95%CI)")
top.5.MASE.t1 %>%  ggplot(aes(x=domain, y=MASE1_w1, colour=Method.code)) +
geom_point(size=3, position=pd, alpha = .7) + scale_x_discrete(labels=labels)+theme_minimal(base_size = 14) +geom_hline(yintercept =1, linetype='dashed', color='red', 14)+theme(legend.position="top")+labs(x="",colour="Approach",y="Inaccuracy [MASE]")
top.5.MASE.t1 %>% ggplot(aes(x = domain, y = MASE1_w1,colour = Method.code, fill=Method.code))+
#   stat_summary(fun.data="mean_cl_boot",  position=pd)+
#    facet_wrap(vars(domain), scales = "free", nrow = 4)+theme_minimal(base_size = 14) +
#   theme(legend.position="bottom") +scale_color_d3()+scale_fill_d3()+
#  labs(colour = "Sample",fill="Sample", x="Time (in months)",y="Absolute Percentage Deviation (M +/- 95%CI)")
top.5.MASE.t1 %>%  ggplot(aes(x=domain, y=MASE1_w1, colour=Method.code)) +
geom_point(size=3, position=pd, alpha = .7) + scale_x_discrete(labels=labels)+theme_minimal(base_size = 14) +geom_hline(yintercept =1, linetype='dashed', color='red', 14)+theme(legend.position="top")+scale_color_aaas() %>% labs(x="",colour="Approach",y="Inaccuracy [MASE]")
top.5.MASE.t1 %>% ggplot(aes(x = domain, y = MASE1_w1,colour = Method.code, fill=Method.code))+
#   stat_summary(fun.data="mean_cl_boot",  position=pd)+
#    facet_wrap(vars(domain), scales = "free", nrow = 4)+theme_minimal(base_size = 14) +
#   theme(legend.position="bottom") +scale_color_d3()+scale_fill_d3()+
#  labs(colour = "Sample",fill="Sample", x="Time (in months)",y="Absolute Percentage Deviation (M +/- 95%CI)")
top.5.MASE.t1 %>%  ggplot(aes(x=domain, y=MASE1_w1, colour=Method.code)) +
geom_point(size=3, position=pd, alpha = .7) + scale_x_discrete(labels=labels)+geom_hline(yintercept =1, linetype='dashed', color='red', 14)+theme(legend.position="top")+scale_color_aaas() labs(x="",colour="Approach",y="Inaccuracy [MASE]")
top.5.MASE.t1 %>% ggplot(aes(x = domain, y = MASE1_w1,colour = Method.code, fill=Method.code))+
#   stat_summary(fun.data="mean_cl_boot",  position=pd)+
#    facet_wrap(vars(domain), scales = "free", nrow = 4)+theme_minimal(base_size = 14) +
#   theme(legend.position="bottom") +scale_color_d3()+scale_fill_d3()+
#  labs(colour = "Sample",fill="Sample", x="Time (in months)",y="Absolute Percentage Deviation (M +/- 95%CI)")
top.5.MASE.t1 %>%  ggplot(aes(x=domain, y=MASE1_w1, colour=Method.code)) +
geom_point(size=3, position=pd, alpha = .7) + scale_x_discrete(labels=labels)+geom_hline(yintercept =1, linetype='dashed', color='red', 14)+theme(legend.position="top")+scale_color_aaas()+
labs(x="",colour="Approach",y="Inaccuracy [MASE]")
top.5.MASE.t1 %>% ggplot(aes(x = domain, y = MASE1_w1,colour = Method.code, fill=Method.code))+
#   stat_summary(fun.data="mean_cl_boot",  position=pd)+
#    facet_wrap(vars(domain), scales = "free", nrow = 4)+theme_minimal(base_size = 14) +
#   theme(legend.position="bottom") +scale_color_d3()+scale_fill_d3()+
#  labs(colour = "Sample",fill="Sample", x="Time (in months)",y="Absolute Percentage Deviation (M +/- 95%CI)")
top.5.MASE.t1 %>%  ggplot(aes(x=domain, y=MASE1_w1, colour=Method.code)) +
geom_point(size=3, position=pd, alpha = .7) + theme(legend.position="top")+scale_color_aaas()+
labs(x="",colour="Approach",y="Inaccuracy [MASE]")
top.5.MASE.t1 %>% ggplot(aes(x = domain, y = MASE1_w1,colour = Method.code, fill=Method.code))+
#   stat_summary(fun.data="mean_cl_boot",  position=pd)+
#    facet_wrap(vars(domain), scales = "free", nrow = 4)+theme_minimal(base_size = 14) +
#   theme(legend.position="bottom") +scale_color_d3()+scale_fill_d3()+
#  labs(colour = "Sample",fill="Sample", x="Time (in months)",y="Absolute Percentage Deviation (M +/- 95%CI)")
top.5.MASE.t1 %>%  ggplot(aes(x=domain, y=MASE1_w1, colour=Method.code)) +
geom_point(size=3, position=pd, alpha = .7) + scale_x_discrete(labels=labels)+geom_hline(yintercept =1, linetype='dashed', color='red', 14)+theme(legend.position="top")+scale_color_aaas()+
ggplot2::labs(x="",colour="Approach",y="Inaccuracy [MASE]")
top.5.MASE.t1 %>% ggplot(aes(x = domain, y = MASE1_w1,colour = Method.code, fill=Method.code))+
#   stat_summary(fun.data="mean_cl_boot",  position=pd)+
#    facet_wrap(vars(domain), scales = "free", nrow = 4)+theme_minimal(base_size = 14) +
#   theme(legend.position="bottom") +scale_color_d3()+scale_fill_d3()+
#  labs(colour = "Sample",fill="Sample", x="Time (in months)",y="Absolute Percentage Deviation (M +/- 95%CI)")
top.5.MASE.t1 %>%  ggplot(aes(x=domain, y=MASE1_w1, colour=Method.code)) +
geom_point(size=3, position=pd, alpha = .7) + scale_x_discrete(labels=labels, name="")+geom_hline(yintercept =1, linetype='dashed', color='red', 14)+theme(legend.position="top")+scale_color_aaas()+
ggplot2::labs(x="",colour="Approach",y="Inaccuracy [MASE]")
top.5.MASE.t1 %>%  ggplot(aes(x=domain, y=MASE1_w1, colour=Method.code)) +
geom_point(size=3, position=pd, alpha = .7) + scale_x_discrete(labels=labels, name="")+geom_hline(yintercept =1, linetype='dashed', color='red', 14)+theme(legend.position="top")+scale_color_aaas()
top.5.MASE.t1 %>% ggplot(aes(x = domain, y = MASE1_w1,colour = Method.code, fill=Method.code))+
#   stat_summary(fun.data="mean_cl_boot",  position=pd)+
#    facet_wrap(vars(domain), scales = "free", nrow = 4)+theme_minimal(base_size = 14) +
#   theme(legend.position="bottom") +scale_color_d3()+scale_fill_d3()+
#  labs(colour = "Sample",fill="Sample", x="Time (in months)",y="Absolute Percentage Deviation (M +/- 95%CI)")
top.5.MASE.t1 %>%  ggplot(aes(x=domain, y=MASE1_w1, colour=Method.code)) +
geom_point(size=3, position=pd, alpha = .7) + scale_x_discrete(labels=labels, name="")+geom_hline(yintercept =1, linetype='dashed', color='red', 14)+theme(legend.position="top")+scale_color_aaas()+
ggplot2::labs(colour="Approach",y="Inaccuracy [MASE]")
top.5.MASE.t1 %>%  ggplot(aes(x=domain, y=MASE1_w1, colour=Method.code)) +
geom_point(size=3, position=pd, alpha = .7) + scale_x_discrete(labels=labels, name="")+geom_hline(yintercept =1, linetype='dashed', color='red', 14)+theme(legend.position="top")+scale_color_aaas(colour="Approach")
top.5.MASE.t1 %>%  ggplot(aes(x=domain, y=MASE1_w1, colour=Method.code)) +
geom_point(size=3, position=pd, alpha = .7) + scale_x_discrete(labels=labels, name="")+geom_hline(yintercept =1, linetype='dashed', color='red', 14)+theme(legend.position="top")+scale_color_aaas(namne="Approach")
?
?scale_color_aaas
top.5.MASE.t1 %>% ggplot(aes(x = domain, y = MASE1_w1,colour = Method.code, fill=Method.code))+
#   stat_summary(fun.data="mean_cl_boot",  position=pd)+
#    facet_wrap(vars(domain), scales = "free", nrow = 4)+theme_minimal(base_size = 14) +
#   theme(legend.position="bottom") +scale_color_d3()+scale_fill_d3()+
#  labs(colour = "Sample",fill="Sample", x="Time (in months)",y="Absolute Percentage Deviation (M +/- 95%CI)")
top.5.MASE.t1 %>%  ggplot(aes(x=domain, y=MASE1_w1, colour=Method.code)) +
geom_point(size=3, position=pd, alpha = .7) + scale_x_discrete(labels=labels, name="")+geom_hline(yintercept =1, linetype='dashed', color='red', 14)+theme(legend.position="top")+
ggplot2::labs(,y="Inaccuracy [MASE]")
top.5.MASE.t1 %>% ggplot(aes(x = domain, y = MASE1_w1,colour = Method.code, fill=Method.code))+
#   stat_summary(fun.data="mean_cl_boot",  position=pd)+
#    facet_wrap(vars(domain), scales = "free", nrow = 4)+theme_minimal(base_size = 14) +
#   theme(legend.position="bottom") +scale_color_d3()+scale_fill_d3()+
#  labs(colour = "Sample",fill="Sample", x="Time (in months)",y="Absolute Percentage Deviation (M +/- 95%CI)")
top.5.MASE.t1 %>%  ggplot(aes(x=domain, y=MASE1_w1, colour=Method.code)) +
geom_point(size=3, position=pd, alpha = .7) + scale_x_discrete(labels=labels, name="")+geom_hline(yintercept =1, linetype='dashed', color='red', 14)+theme(legend.position="top")+
labs(y="Inaccuracy [MASE]")
top.5.MASE.t1 %>% ggplot(aes(x = domain, y = MASE1_w1,colour = Method.code, fill=Method.code))+
#   stat_summary(fun.data="mean_cl_boot",  position=pd)+
#    facet_wrap(vars(domain), scales = "free", nrow = 4)+theme_minimal(base_size = 14) +
#   theme(legend.position="bottom") +scale_color_d3()+scale_fill_d3()+
#  labs(colour = "Sample",fill="Sample", x="Time (in months)",y="Absolute Percentage Deviation (M +/- 95%CI)")
top.5.MASE.t1 %>%  ggplot(aes(x=domain, y=MASE1_w1, colour=Method.code)) +
geom_point(size=3, position=pd, alpha = .7) + scale_x_discrete(labels=labels, name="")+geom_hline(yintercept =1, linetype='dashed', color='red', 14)+theme(legend.position="top")+scale_y_continuous(name=""Inaccuracy [MASE]"")
top.5.MASE.t1 %>% ggplot(aes(x = domain, y = MASE1_w1,colour = Method.code, fill=Method.code))+
#   stat_summary(fun.data="mean_cl_boot",  position=pd)+
#    facet_wrap(vars(domain), scales = "free", nrow = 4)+theme_minimal(base_size = 14) +
#   theme(legend.position="bottom") +scale_color_d3()+scale_fill_d3()+
#  labs(colour = "Sample",fill="Sample", x="Time (in months)",y="Absolute Percentage Deviation (M +/- 95%CI)")
top.5.MASE.t1 %>%  ggplot(aes(x=domain, y=MASE1_w1, colour=Method.code)) +
geom_point(size=3, position=pd, alpha = .7) + scale_x_discrete(labels=labels, name="")+geom_hline(yintercept =1, linetype='dashed', color='red', 14)+theme(legend.position="top")+scale_y_continuous(name="Inaccuracy [MASE]")
top.5.MASE.t1 %>% ggplot(aes(x = domain, y = MASE1_w1,colour = Method.code, fill=Method.code))+
#   stat_summary(fun.data="mean_cl_boot",  position=pd)+
#    facet_wrap(vars(domain), scales = "free", nrow = 4)+theme_minimal(base_size = 14) +
#   theme(legend.position="bottom") +scale_color_d3()+scale_fill_d3()+
#  labs(colour = "Sample",fill="Sample", x="Time (in months)",y="Absolute Percentage Deviation (M +/- 95%CI)")
top.5.MASE.t1 %>%  ggplot(aes(x=domain, y=MASE1_w1, colour=Method.code)) +
geom_point(size=3, position=pd, alpha = .7) + scale_x_discrete(labels=labels, name="")+scale_y_continuous(name="Inaccuracy [MASE]")+geom_hline(yintercept =1, linetype='dashed', color='red', 14)+theme(legend.position="top")
top.5.MASE.t1 %>% ggplot(aes(x = domain, y = MASE1_w1,colour = Method.code, fill=Method.code))+
#   stat_summary(fun.data="mean_cl_boot",  position=pd)+
#    facet_wrap(vars(domain), scales = "free", nrow = 4)+theme_minimal(base_size = 14) +
#   theme(legend.position="bottom") +scale_color_d3()+scale_fill_d3()+
#  labs(colour = "Sample",fill="Sample", x="Time (in months)",y="Absolute Percentage Deviation (M +/- 95%CI)")
top.5.MASE.t1 %>%  ggplot(aes(x=domain, y=MASE1_w1, colour=Method.code)) +
geom_point(size=3, position=pd, alpha = .7) + scale_x_discrete(labels=labels, name="")+scale_y_discrete(name="Inaccuracy [MASE]")+geom_hline(yintercept =1, linetype='dashed', color='red', 14)+theme(legend.position="top")
top.5.MASE.t1 %>% ggplot(aes(x = domain, y = MASE1_w1,colour = Method.code, fill=Method.code))+
#   stat_summary(fun.data="mean_cl_boot",  position=pd)+
#    facet_wrap(vars(domain), scales = "free", nrow = 4)+theme_minimal(base_size = 14) +
#   theme(legend.position="bottom") +scale_color_d3()+scale_fill_d3()+
#  labs(colour = "Sample",fill="Sample", x="Time (in months)",y="Absolute Percentage Deviation (M +/- 95%CI)")
top.5.MASE.t1 %>%  ggplot(aes(x=domain, y=MASE1_w1, colour=Method.code)) +
geom_point(size=3, position=pd, alpha = .7) + scale_x_discrete(labels=labels, name="")+scale_y_discrete("Inaccuracy [MASE]")+geom_hline(yintercept =1, linetype='dashed', color='red', 14)+theme(legend.position="top")
top.5.MASE.t1 %>% ggplot(aes(x = domain, y = MASE1_w1,colour = Method.code, fill=Method.code))+
#   stat_summary(fun.data="mean_cl_boot",  position=pd)+
#    facet_wrap(vars(domain), scales = "free", nrow = 4)+theme_minimal(base_size = 14) +
#   theme(legend.position="bottom") +scale_color_d3()+scale_fill_d3()+
#  labs(colour = "Sample",fill="Sample", x="Time (in months)",y="Absolute Percentage Deviation (M +/- 95%CI)")
as.data.frame(top.5.MASE.t1) %>% ggplot(aes(x=domain, y=MASE1_w1, colour=Method.code)) +
geom_point(size=3, position=pd, alpha = .7) + scale_x_discrete(labels=labels, name="")+scale_y_discrete("Inaccuracy [MASE]")+geom_hline(yintercept =1, linetype='dashed', color='red', 14)+theme(legend.position="top")
top.5.MASE.t1 %>% ggplot(aes(x = domain, y = MASE1_w1,colour = Method.code, fill=Method.code))+
#   stat_summary(fun.data="mean_cl_boot",  position=pd)+
#    facet_wrap(vars(domain), scales = "free", nrow = 4)+theme_minimal(base_size = 14) +
#   theme(legend.position="bottom") +scale_color_d3()+scale_fill_d3()+
#  labs(colour = "Sample",fill="Sample", x="Time (in months)",y="Absolute Percentage Deviation (M +/- 95%CI)")
top.5.MASE.t1 %>% ggplot(aes(x=domain, y=MASE1_w1, colour=Method.code)) +
geom_point(size=3, position=pd, alpha = .7) + scale_x_discrete(labels=labels, name="")+scale_y_discrete("Inaccuracy [MASE]")+geom_hline(yintercept =1, linetype='dashed', color='red', 14)+theme(legend.position="top")
top.5.MASE.t1 %>% ggplot(aes(x = domain, y = MASE1_w1,colour = Method.code, fill=Method.code))+
#   stat_summary(fun.data="mean_cl_boot",  position=pd)+
#    facet_wrap(vars(domain), scales = "free", nrow = 4)+theme_minimal(base_size = 14) +
#   theme(legend.position="bottom") +scale_color_d3()+scale_fill_d3()+
#  labs(colour = "Sample",fill="Sample", x="Time (in months)",y="Absolute Percentage Deviation (M +/- 95%CI)")
ggplot(top.5.MASE.t1,aes(x=domain, y=MASE1_w1, colour=Method.code)) +
geom_point(size=3, position=pd, alpha = .7) + scale_x_discrete(labels=labels, name="")+scale_y_discrete("Inaccuracy [MASE]")+geom_hline(yintercept =1, linetype='dashed', color='red', 14)+theme(legend.position="top")
top.5.MASE.t1 %>% ggplot(aes(x = domain, y = MASE1_w1,colour = Method.code, fill=Method.code))+
#   stat_summary(fun.data="mean_cl_boot",  position=pd)+
#    facet_wrap(vars(domain), scales = "free", nrow = 4)+theme_minimal(base_size = 14) +
#   theme(legend.position="bottom") +scale_color_d3()+scale_fill_d3()+
#  labs(colour = "Sample",fill="Sample", x="Time (in months)",y="Absolute Percentage Deviation (M +/- 95%CI)")
top.5.MASE.t1 %>% ggplot(aes(x=domain, y=MASE1_w1, colour=Method.code)) +
geom_point(size=3, position=pd, alpha = .7) + scale_x_discrete(labels=labels, name="")+scale_y_discrete("Inaccuracy [MASE]")+geom_hline(yintercept =1, linetype='dashed', color='red', 14)+theme(legend.position="top")
top.5.MASE.t1 %>% ggplot(aes(x = domain, y = MASE1_w1,colour = Method.code, fill=Method.code))+
#   stat_summary(fun.data="mean_cl_boot",  position=pd)+
#    facet_wrap(vars(domain), scales = "free", nrow = 4)+theme_minimal(base_size = 14) +
#   theme(legend.position="bottom") +scale_color_d3()+scale_fill_d3()+
#  labs(colour = "Sample",fill="Sample", x="Time (in months)",y="Absolute Percentage Deviation (M +/- 95%CI)")
top.5.MASE.t1 %>% ggplot(aes(x=domain, y=MASE1_w1, colour=Method.code)) +
geom_point(size=3, position=pd, alpha = .7) + scale_x_discrete(labels=labels, name="")+geom_hline(yintercept =1, linetype='dashed', color='red', 14)+theme(legend.position="top")
top.5.MASE.t1 %>% ggplot(aes(x=domain, y=MASE1_w1, colour=Method.code)) +
geom_point(size=3, position=pd, alpha = .7) + scale_x_discrete(labels=labels, name="")+geom_hline(yintercept =1, linetype='dashed', color='red', 14)
top.5.MASE.t1 %>% ggplot(aes(x = domain, y = MASE1_w1,colour = Method.code, fill=Method.code))+
#   stat_summary(fun.data="mean_cl_boot",  position=pd)+
#    facet_wrap(vars(domain), scales = "free", nrow = 4)+theme_minimal(base_size = 14) +
#   theme(legend.position="bottom") +scale_color_d3()+scale_fill_d3()+
#  labs(colour = "Sample",fill="Sample", x="Time (in months)",y="Absolute Percentage Deviation (M +/- 95%CI)")
top.5.MASE.t1 %>% ggplot(aes(x=domain, y=MASE1_w1, colour=Method.code)) +
geom_point(size=3, position=pd, alpha = .7) + scale_x_discrete(labels=labels, name="")+geom_hline(yintercept =1, linetype='dashed', color='red', 14)+theme(legend.position="top")
top.5.MASE.t1 %>% ggplot(aes(x = domain, y = MASE1_w1,colour = Method.code, fill=Method.code))+
#   stat_summary(fun.data="mean_cl_boot",  position=pd)+
#    facet_wrap(vars(domain), scales = "free", nrow = 4)+theme_minimal(base_size = 14) +
#   theme(legend.position="bottom") +scale_color_d3()+scale_fill_d3()+
#  labs(colour = "Sample",fill="Sample", x="Time (in months)",y="Absolute Percentage Deviation (M +/- 95%CI)")
top.5.MASE.t1 %>% ggplot(aes(x=domain, y=MASE1_w1, colour=Method.code)) +
geom_point(size=3, position=pd, alpha = .7) + scale_x_discrete(labels=labels, name="")+geom_hline(yintercept =1, linetype='dashed', color='red', 14)+labs(colour="Inaccuracy [MASE]")
top.5.MASE.t1 %>% ggplot(aes(x = domain, y = MASE1_w1,colour = Method.code, fill=Method.code))+
#   stat_summary(fun.data="mean_cl_boot",  position=pd)+
#    facet_wrap(vars(domain), scales = "free", nrow = 4)+theme_minimal(base_size = 14) +
#   theme(legend.position="bottom") +scale_color_d3()+scale_fill_d3()+
#  labs(colour = "Sample",fill="Sample", x="Time (in months)",y="Absolute Percentage Deviation (M +/- 95%CI)")
top.5.MASE.t1 %>% ggplot(aes(x=domain, y=MASE1_w1, colour=Method.code)) +
geom_point(size=3, position=pd, alpha = .7) + scale_x_discrete(labels=labels, name="")+geom_hline(yintercept =1, linetype='dashed', color='red', 14)+theme(legend.position="top")
top.5.MASE.t1 %>% ggplot(aes(x=domain, y=MASE1_w1, colour=Method.code)) +
geom_point(size=3, position=pd, alpha = .7) + scale_x_discrete(labels=labels, name="")+geom_hline(yintercept =1, linetype='dashed', color='red', 14)
top.5.MASE.t1 %>% ggplot(aes(x = domain, y = MASE1_w1,colour = Method.code, fill=Method.code))+
#   stat_summary(fun.data="mean_cl_boot",  position=pd)+
#    facet_wrap(vars(domain), scales = "free", nrow = 4)+theme_minimal(base_size = 14) +
#   theme(legend.position="bottom") +scale_color_d3()+scale_fill_d3()+
#  labs(colour = "Sample",fill="Sample", x="Time (in months)",y="Absolute Percentage Deviation (M +/- 95%CI)")
top.5.MASE.t1 %>% ggplot(aes(x=domain, y=MASE1_w1, colour=Method.code)) +
geom_point(size=3, position=pd, alpha = .7) + theme(legend.position="top")+scale_x_discrete(labels=labels, name="")+geom_hline(yintercept =1, linetype='dashed', color='red', 14)
top.5.MASE.t1 %>% ggplot(aes(x=domain, y=MASE1_w1, colour=Method.code)) +
geom_point(size=3, position=pd, alpha = .7)
top.5.MASE.t1 %>%  ggplot(aes(x=domain, y=MASE1_w1, colour=Method.code)) +
geom_point(size=3, position=pd, alpha = .7) + scale_x_discrete(labels=labels, name="")+geom_hline(yintercept =1, linetype='dashed', color='red', 14)+theme(legend.position="top")+scale_color_aaas(name="Approach")
top.5.MASE.t1 %>% ggplot(aes(x = domain, y = MASE1_w1,colour = Method.code, fill=Method.code))+
#   stat_summary(fun.data="mean_cl_boot",  position=pd)+
#    facet_wrap(vars(domain), scales = "free", nrow = 4)+theme_minimal(base_size = 14) +
#   theme(legend.position="bottom") +scale_color_d3()+scale_fill_d3()+
#  labs(colour = "Sample",fill="Sample", x="Time (in months)",y="Absolute Percentage Deviation (M +/- 95%CI)")
top.5.MASE.t1 %>%  ggplot(aes(x=domain, y=MASE1_w1, colour=Method.code)) +
geom_point(size=3, position=pd, alpha = .7) + scale_x_discrete(labels=labels, name="")+geom_hline(yintercept =1, linetype='dashed', color='red', 14)+theme(legend.position="top")+scale_color_aaas(name="Approach")+scale_y_continuous(name="Inaccuracy")
top.5.MASE.t1 %>% ggplot(aes(x = domain, y = MASE1_w1,colour = Method.code, fill=Method.code))+
#   stat_summary(fun.data="mean_cl_boot",  position=pd)+
#    facet_wrap(vars(domain), scales = "free", nrow = 4)+theme_minimal(base_size = 14) +
#   theme(legend.position="bottom") +scale_color_d3()+scale_fill_d3()+
#  labs(colour = "Sample",fill="Sample", x="Time (in months)",y="Absolute Percentage Deviation (M +/- 95%CI)")
top.5.MASE.t1 %>%  ggplot(aes(x=domain, y=MASE1_w1, colour=Method.code)) +
geom_point(size=3, position=pd, alpha = .7) + scale_x_discrete(labels=labels, name="")+geom_hline(yintercept =1, linetype='dashed', color='red', 14)+theme(legend.position="top")+scale_color_aaas(name="Approach")+scale_y_discrete(name="Inaccuracy")
top.5.MASE.t1 %>% ggplot(aes(x = domain, y = MASE1_w1,colour = Method.code, fill=Method.code))+
#   stat_summary(fun.data="mean_cl_boot",  position=pd)+
#    facet_wrap(vars(domain), scales = "free", nrow = 4)+theme_minimal(base_size = 14) +
#   theme(legend.position="bottom") +scale_color_d3()+scale_fill_d3()+
#  labs(colour = "Sample",fill="Sample", x="Time (in months)",y="Absolute Percentage Deviation (M +/- 95%CI)")
top.5.MASE.t1 %>%  ggplot(aes(x=domain, y=MASE1_w1, colour=Method.code)) +
geom_point(size=3, position=pd, alpha = .7) + scale_x_discrete(labels=labels, name="")+geom_hline(yintercept =1, linetype='dashed', color='red', 14)+theme(legend.position="top")+scale_color_aaas(name="Approach")
?scale_color_aaas
top.5.MASE.t1 %>% ggplot(aes(x = domain, y = MASE1_w1,colour = Method.code, fill=Method.code))+
#   stat_summary(fun.data="mean_cl_boot",  position=pd)+
#    facet_wrap(vars(domain), scales = "free", nrow = 4)+theme_minimal(base_size = 14) +
#   theme(legend.position="bottom") +scale_color_d3()+scale_fill_d3()+
#  labs(colour = "Sample",fill="Sample", x="Time (in months)",y="Absolute Percentage Deviation (M +/- 95%CI)")
top.5.MASE.t1 %>%  ggplot(aes(x=domain, y=MASE1_w1, colour=Method.code)) +
geom_point(size=3, position=pd, alpha = .7) + scale_x_discrete(labels=labels, name="")+geom_hline(yintercept =1, linetype='dashed', color='red', 14)+theme(legend.position="top")+scale_colour_aaas(name="Approach")
top.5.MASE.t1 %>% ggplot(aes(x = domain, y = MASE1_w1,colour = Method.code, fill=Method.code))+
#   stat_summary(fun.data="mean_cl_boot",  position=pd)+
#    facet_wrap(vars(domain), scales = "free", nrow = 4)+theme_minimal(base_size = 14) +
#   theme(legend.position="bottom") +scale_color_d3()+scale_fill_d3()+
#  labs(colour = "Sample",fill="Sample", x="Time (in months)",y="Absolute Percentage Deviation (M +/- 95%CI)")
top.5.MASE.t1 %>%  ggplot(aes(x=domain, y=MASE1_w1, colour=Method.code)) +
geom_point(size=3, position=pd, alpha = .7) + scale_x_discrete(labels=labels, name="")+geom_hline(yintercept =1, linetype='dashed', color='red', 14)+theme(legend.position="top")+scale_colour_aaas(name="Approach")
top.5.MASE.t1 %>% ggplot(aes(x = domain, y = MASE1_w1,colour = Method.code, fill=Method.code))+
#   stat_summary(fun.data="mean_cl_boot",  position=pd)+
#    facet_wrap(vars(domain), scales = "free", nrow = 4)+theme_minimal(base_size = 14) +
#   theme(legend.position="bottom") +scale_color_d3()+scale_fill_d3()+
#  labs(colour = "Sample",fill="Sample", x="Time (in months)",y="Absolute Percentage Deviation (M +/- 95%CI)")
top.5.MASE.t1 %>%  ggplot(aes(x=domain, y=MASE1_w1, colour=Method.code)) +
geom_point(size=3, position=pd, alpha = .7) + scale_x_discrete(labels=labels, name="")+geom_hline(yintercept =1, linetype='dashed', color='red', 14)+theme(legend.position="top")+scale_color_aaas(name="Approach")
top.5.MASE.t1 %>% ggplot(aes(x = domain, y = MASE1_w1,colour = Method.code, fill=Method.code))+
#   stat_summary(fun.data="mean_cl_boot",  position=pd)+
#    facet_wrap(vars(domain), scales = "free", nrow = 4)+theme_minimal(base_size = 14) +
#   theme(legend.position="bottom") +scale_color_d3()+scale_fill_d3()+
#  labs(colour = "Sample",fill="Sample", x="Time (in months)",y="Absolute Percentage Deviation (M +/- 95%CI)")
top.5.MASE.t1 %>%  ggplot(aes(x=domain, y=MASE1_w1, colour=Method.code)) +
geom_point(size=3, position=pd, alpha = .7) + scale_x_discrete(labels=labels, name="")+geom_hline(yintercept =1, linetype='dashed', color='red', 14)+theme(legend.position="top")+scale_color_aaas(name="Approach")
top.5.MASE.t1 %>%  ggplot(aes(x=domain, y=MASE1_w1, colour=Method.code)) +
geom_point(size=3, position=pd, alpha = .7) + scale_x_discrete(labels=labels, name="")+geom_hline(yintercept =1, linetype='dashed', color='red', 14)+theme(legend.position="top")+scale_color_aaas(name="Approach")
top.5.MASE.t1 %>%  ggplot(aes(x=domain, y=MASE1_w1, colour=Method.code)) +
geom_point(size=3, position=pd, alpha = .7) + scale_x_discrete(labels=labels, name="")+geom_hline(yintercept =1, linetype='dashed', color='red', 14)+theme(legend.position="top")+scale_colour_aaas(name="Approach")
top.5.MASE.t1 %>%  ggplot(aes(x=domain, y=MASE1_w1, colour=Method.code)) +
geom_point(size=3, position=pd, alpha = .7) + scale_x_discrete(labels=labels, name="")+geom_hline(yintercept =1, linetype='dashed', color='red', 14)+theme(legend.position="top")+scale_colour_aaas(name="Approach",palette = c("default"))
top.5.MASE.t1 %>%  ggplot(aes(x=domain, y=MASE1_w1, colour=Method.code)) +
geom_point(size=3, position=pd, alpha = .7) + scale_x_discrete(labels=labels, name="")+geom_hline(yintercept =1, linetype='dashed', color='red', 14)+theme(legend.position="top")+scale_colour_aaas()
top.5.MASE.t1 %>% ggplot(aes(x = domain, y = MASE1_w1,colour = Method.code, fill=Method.code))+
#   stat_summary(fun.data="mean_cl_boot",  position=pd)+
#    facet_wrap(vars(domain), scales = "free", nrow = 4)+theme_minimal(base_size = 14) +
#   theme(legend.position="bottom") +scale_color_d3()+scale_fill_d3()+
#  labs(colour = "Sample",fill="Sample", x="Time (in months)",y="Absolute Percentage Deviation (M +/- 95%CI)")
top.5.MASE.t1 %>%  ggplot(aes(x=domain, y=MASE1_w1, colour=Method.code)) +
geom_point(size=3, position=pd, alpha = .7) + scale_x_discrete(labels=labels, name="")+geom_hline(yintercept =1, linetype='dashed', color='red', 14)+theme(legend.position="top")+scale_colour_aaas(name="Approach")
top.5.MASE.t1 %>%  ggplot(aes(x=domain, y=MASE1_w1, colour=Method.code)) +
geom_point(size=3, position=pd, alpha = .7) + scale_x_discrete(labels=labels, name="")+geom_hline(yintercept =1, linetype='dashed', color='red', 14)+theme(legend.position="top")+scale_colour_aaas(name="Approach")
proportions(xtabs( ~ domain+Method.code,top.5.MASE.t1),"domain")*100
proportions(xtabs( ~ Method.code,top.5.MASE.t1))*100 #in total
View(top.5.MASE.t1)
top.5.MASE.t1 %>% ggplot(aes(x = domain, y = team_size.coded,colour = Method.code, fill=Method.code))+
stat_summary(fun.data="mean_cl_boot",  position=pd)+theme_minimal(base_size = 14) +
theme(legend.position="bottom") +scale_color_d3()+scale_fill_d3()+
labs(colour = "Approach",fill="Approach", x="",y="Team Size (M +/- 95%CI)")
phase1 %>% filter(isExpert.factor == 'Academic')  %>%
arrange(domain,MASE1_w1) %>%group_by(domain) %>% dplyr::slice_head(n = 10) %>% select(team_name,MASE1_w1,domain,team_size.coded,discipline,previous_tournament.coded,Method.code,model,theory,numpred,parameters,Method.complex,team_expertise)%>%
ggplot(aes(x = domain, y = team_size.coded,colour = Method.code, fill=Method.code))+
stat_summary(fun.data="mean_cl_boot",  position=pd)+theme_minimal(base_size = 14) +
theme(legend.position="bottom") +scale_color_d3()+scale_fill_d3()+
labs(colour = "Approach",fill="Approach", x="",y="Size of Top 10 Teams (M +/- 95%CI)")
phase1 %>% filter(isExpert.factor == 'Academic')  %>%
arrange(domain,MASE1_w1) %>%group_by(domain) %>% dplyr::slice_head(n = 10) %>% select(team_name,MASE1_w1,domain,team_size.coded,discipline,previous_tournament.coded,Method.code,model,theory,numpred,parameters,Method.complex,team_expertise)%>%
ggplot(aes(x = domain, y = team_size.coded,colour = Method.code, fill=Method.code))+
stat_summary(fun.data="mean_cl_boot",  position=pd)+theme_minimal(base_size = 14) +
theme(legend.position="bottom") +scale_color_d3()+scale_fill_d3()+scale_x_discrete(labels=labels, name="")+
labs(colour = "Approach",fill="Approach", x="",y="Size of Top 10 Teams (M +/- 95%CI)")
phase1 %>% filter(isExpert.factor == 'Academic')  %>%
arrange(domain,MASE1_w1) %>%group_by(domain) %>% dplyr::slice_head(n = 10) %>% select(team_name,MASE1_w1,domain,team_size.coded,discipline,previous_tournament.coded,Method.code,model,theory,numpred,parameters,Method.complex,team_expertise)%>%
ggplot(aes(x = domain, y = team_size.coded))+
stat_summary(fun.data="mean_cl_boot",  position=pd)+theme_minimal(base_size = 14) +
theme(legend.position="bottom") +scale_x_discrete(labels=labels, name="")+
labs(colour = "Approach",fill="Approach", x="",y="Size of Top 10 Teams (M +/- 95%CI)")
top.5.MASE.t1 %>%  ggplot(aes(x=domain, y=MASE1_w1, colour=discipline)) +
geom_point(size=3, position=pd, alpha = .7) + scale_x_discrete(labels=labels, name="")+geom_hline(yintercept =1, linetype='dashed', color='red', 14)+theme(legend.position="top")+scale_colour_aaas(name="Field")
top.5.MASE.t1 %>%  ggplot(aes(x=domain, y=MASE1_w1, colour=discipline)) +
geom_point(size=3, position=pd, alpha = .7) + scale_x_discrete(labels=labels, name="")+geom_hline(yintercept =1, linetype='dashed', color='red', 14)+theme(legend.position="top")+scale_colour_d3(name="Field")
proportions(xtabs( ~ discipline,top.5.MASE.t1))*100 #in total
proportions(xtabs( ~ domain+Method.code,top.5.MASE.t1),"domain")*100 #by domain
proportions(xtabs( ~ domain+discipline,top.5.MASE.t1),"domain")*100 #by domain
top.5.MASE.t1 %>%  ggplot(aes(x=domain, y=MASE1_w1, colour=previous_tournament.coded)) +
geom_point(size=3, position=pd, alpha = .7) + scale_x_discrete(labels=labels, name="")+geom_hline(yintercept =1, linetype='dashed', color='red', 14)+theme(legend.position="top")+scale_colour_d3(name="Prior Forecasting Experience")
knitr::opts_chunk$set(echo = TRUE)
library(forecast)
library(psych)
library(tidyverse)
library(irr)
library(lme4)
library(ggplot2)
library(tidyr)
library(emmeans)
library(car)
library(jtools)
library(dplyr)
library(ggsci)
library(dplyr)
library(Hmisc)
options(max.print = 20000, scipen = 1000)
setwd("~/GitHub/Forecasting-Tournament") #igor's working directory
dat <- read.csv("dat_for_analyses.csv", stringsAsFactors = FALSE)
dat_long <- read.csv("dat_long.csv", stringsAsFactors = FALSE)
# dataset that only includes academic predictions and those who provided open-ended data
academic_only <- filter(dat, isExpert == 1 & !is.na(Method.code))
#datasets that are filtered by phase (1 = May submission, 2 = November submission)
phase1 <- filter(dat, phase == 1& !is.na(Method.code))
phase2 <- filter(dat, phase == 2& !is.na(Method.code))
# Phase 1 & 2further filtered to only include academics won't be necessary once we have updated objective data
phase1_exp <- filter(phase1, isExpert == 1& !is.na(Method.code))
phase2_exp <-filter(phase2, isExpert == 1& !is.na(Method.code))
pd <- position_dodge(0.7) # move them .07 to the left and right
labels<-c(
eafric = "Exp. Af-Am. Bias",
easian = "Exp. As-Am. Bias",
egend = "Exp. Gender Bias",
iafric = "Imp. Af-Am. Bias",
iasian = "Imp. As.-Am. Bias",
ideoldem = "Democrats",
ideolrep ="Republicans",
igend = "Imp. Gender Bias",
lifesat = "Life Satisfaction",
negaffect = "Negative Affect",
polar = "Polit. Polarization",
posaffect = "Positive Affect")
#who won?
Viewtop.1.MASE.t2<-academic_only %>%
arrange(domain,MASE1_w2) %>%group_by(domain) %>% dplyr::slice_head(n = 5) %>% select(team_name,MASE1_w2,domain,team_size.coded,discipline,is_multidisciplinary,previous_tournament.coded,Method.code,model,theory,numpred,parameters,Method.complex,team_expertise, revised)
#who won?
Viewtop.1.MASE.t2<-academic_only %>%
arrange(domain,MASE1_w2) %>%group_by(domain) %>% dplyr::slice_head(n = 5) %>% select(team_name,MASE1_w2,domain,team_size.coded,discipline,previous_tournament.coded,Method.code,model,theory,numpred,parameters,Method.complex,team_expertise,revised)
View(Viewtop.1.MASE.t2)
#who won?
Viewtop.1.MASE.t2<-academic_only %>%
arrange(domain,MASE1_w2) %>%group_by(domain) %>% dplyr::slice_head(n = 1) %>% select(team_name,MASE1_w2,domain,team_size.coded,discipline,previous_tournament.coded,Method.code,model,theory,numpred,parameters,Method.complex,team_expertise,revised)
View(Viewtop.1.MASE.t2)
names(dat)
#who won?
Viewtop.1.MASE.t2<-academic_only %>%
arrange(domain,MASE1_w2) %>%group_by(domain) %>% dplyr::slice_head(n = 1) %>% select(team_name,MASE1_w2,domain,team_size.coded,discipline,previous_tournament.coded,Method.code,model,theory,numpred,parameters,Method.complex,team_expertise,revised,phase)
View(Viewtop.1.MASE.t2)
Viewtop.5.MASE.t2<-academic_only %>%
arrange(domain,MASE1_w2) %>%group_by(domain) %>% dplyr::slice_head(n = 5) %>% select(team_name,MASE1_w2,domain,team_size.coded,discipline,previous_tournament.coded,Method.code,model,theory,numpred,parameters,Method.complex,team_expertise,revised,phase)
View(domain)
View(Viewtop.5.MASE.t2)
Viewtop.5.MASE.t2 %>%  ggplot(aes(x=domain, y=MASE1_w2, colour=Method.code)) +
geom_point(size=3, position=pd, alpha = .7) + scale_x_discrete(labels=labels, name="")+geom_hline(yintercept =1, linetype='dashed', color='red', 14)+theme(legend.position="top")+scale_colour_aaas(name="Approach")
top.5.MASE.t2 %>%  ggplot(aes(x=domain, y=MASE1_w2, colour=discipline)) +
geom_point(size=3, position=pd, alpha = .7) + scale_x_discrete(labels=labels, name="")+geom_hline(yintercept =1, linetype='dashed', color='red', 14)+theme(legend.position="top")+scale_colour_d3(name="Field")
top.5.MASE.t2<-academic_only %>%
arrange(domain,MASE1_w2) %>%group_by(domain) %>% dplyr::slice_head(n = 5) %>% select(team_name,MASE1_w2,domain,team_size.coded,discipline,previous_tournament.coded,Method.code,model,theory,numpred,parameters,Method.complex,team_expertise,revised,phase)
top.5.MASE.t2 %>%  ggplot(aes(x=domain, y=MASE1_w2, colour=discipline)) +
geom_point(size=3, position=pd, alpha = .7) + scale_x_discrete(labels=labels, name="")+geom_hline(yintercept =1, linetype='dashed', color='red', 14)+theme(legend.position="top")+scale_colour_d3(name="Field")
top.5.MASE.t2<-academic_only %>%
arrange(domain,MASE1_w2) %>%group_by(domain) %>% dplyr::slice_head(n = 5) %>% select(team_name,MASE1_w2,domain,team_size.coded,team_discipline.coded,discipline,previous_tournament.coded,Method.code,model,theory,numpred,parameters,Method.complex,team_expertise,revised,phase)
View(top.5.MASE.t2)
top.5.MASE.t2 %>%  ggplot(aes(x=domain, y=MASE1_w2, colour=as.factor(previous_tournament.coded))) +
geom_point(size=3, position=pd, alpha = .7) + scale_x_discrete(labels=labels, name="")+geom_hline(yintercept =1, linetype='dashed', color='red', 14)+theme(legend.position="top")+scale_colour_d3(name="Prior Forecasting Experience")
proportions(xtabs( ~ Method.code,top.5.MASE.t2))*100 #in total
proportions(xtabs( ~ domain+Method.code,top.5.MASE.t2),"domain")*100 #by domain
#who won?
top.1.MASE.t2<-academic_only %>%
arrange(domain,MASE1_w2) %>%group_by(domain) %>% dplyr::slice_head(n = 1) %>% select(team_name,MASE1_w2,domain,team_size.coded,discipline,previous_tournament.coded,Method.code,model,theory,numpred,parameters,Method.complex,team_expertise,revised,phase)
View(top.1.MASE.t2)
names(dat)
top.5.MASE.t2<-academic_only %>%
arrange(domain,MASE1_w2) %>%group_by(domain) %>% dplyr::slice_head(n = 5) %>% select(team_name,MASE1_w2,compare_to_naive_linear,compare_to_naive_rwf,domain,team_size.coded,discipline,previous_tournament.coded,Method.code,model,theory,numpred,parameters,Method.complex,team_expertise,revised,phase)
View(top.5.MASE.t2<)
View(top.5.MASE.t2)
#In this section we set Global options for the entire document
#Set the maximum number of rows to be printed in the console to 2,000.
options(max.print=2000)
#Set chunk options as follows: print code = Yes, save cache = Yes,
#Keep right arrow prompt  = No, reformat code = Yes,
#show information messages = No, show warning messages = No.
knitr::opts_chunk$set(echo=T, cache=TRUE, prompt=F, tidy=T, message=FALSE, warning=FALSE)
#Show decimals up to 10 decimal points. After that use e notation.
options(scipen = 3)
#' Removing scientific notation
#options(scipen=999)
library(haven)
library(dplyr)
library(apaTables)
library(jtools)
library(ggplot2)
library(ggthemes) #functions used: theme_gdocs()
library(viridis)
library(sjPlot)
library(ggeffects)
library(ggpubr)
library(psych)
library(GPArotation)
library(tidyr) #functions used: gather()
library(mice)
library(factoextra)
setwd("C:/Users/igrossma/OneDrive - University of Waterloo/data projects/Abstract  Concrete and Wisdom/construal psychometrics")
rawdata<-read.csv('efadata.csv',header=TRUE)
data<-subset(rawdata,Filter==0)
items<-c("abstract_1","abstract_2","abstract_3","abstract_4","abstract_5","abstract_6","abstract_7","abstract_8","abstract_9" ,"abstract_10","abstract_11","abstract_12","abstract_13","abstract_14","abstract_15","abstract_17","abstract_18","abstract_19","abstract_21",  "abstract_22", "abstract_24","abstract_25","abstract_26" , "abstract_27","abstract_28" , "abstract_30","abstract_31" ,"abstract_32","abstract_33", "abstract_34" , "abstract_35" ,"concrete_1","concrete_2","concrete_3","concrete_4","concrete_5","concrete_6","concrete_7","concrete_8","concrete_9","concrete_10","concrete_11","concrete_12",
"ratings_2concrete_13_31","concrete_14","concrete_15","concrete_16","concrete_17" ,"concrete_18","concrete_19","concrete_21", "concrete_22", "concrete_24" ,"concrete_25","concrete_26", "concrete_27","concrete_28","concrete_29" ,"concrete_30" ,"concrete_31","concrete_32","concrete_33","concrete_34")
#create shorter items list, excluding initially generated items for emotionsfeelings and distance, as per recommendation of CLT experts
#Excluded the following abstract
#10.I distanced myself from the experience
#25 I tried to look at myself through a third-person perspective, as an observer would
#and the following concrete
#5.	I thought about how this situation makes me feel
#11.	I felt overwhelmed by emotions
#17.	I focused on how the situation made me feel.
#29.	It evoked strong emotion in me
#30.	I relied on my intuitive impressions of the situation.
#31.	I relied on my instincts when considering ways to handle the situation.
#32.	I used my heart as a guide for my thoughts.
items.short<-c("abstract_1","abstract_2","abstract_3","abstract_4","abstract_5","abstract_6","abstract_7","abstract_8","abstract_9" ,"abstract_11","abstract_12","abstract_13","abstract_14","abstract_15","abstract_17","abstract_18","abstract_19","abstract_21",  "abstract_22", "abstract_24","abstract_26" , "abstract_27","abstract_28" , "abstract_30","abstract_31" ,"abstract_32","abstract_33", "abstract_34" , "abstract_35" ,"concrete_1","concrete_2","concrete_3","concrete_4","concrete_6","concrete_7","concrete_8","concrete_9","concrete_10","concrete_12",
"ratings_2concrete_13_31","concrete_14","concrete_15","concrete_16","concrete_18","concrete_19","concrete_21", "concrete_22", "concrete_24" ,"concrete_25","concrete_26", "concrete_27","concrete_28","concrete_33","concrete_34")
construal.data<-data[items]
construal.data.short<-data[items.short]
#First, subset out participants that have too much missing data:
percentmissing = function (x){ sum(is.na(x))/length(x) * 100}
missing = apply(construal.data.short, 1, percentmissing)
table(missing) # 1 misses all, 2 miss a lot, one misses less than 2 percent
replacepeople <- subset(construal.data.short, missing <= 5) # get rid of those who miss more than 5%
apply(replacepeople, 2, percentmissing)
#replace
tempnomiss<- mice(replacepeople)
nomiss<- mice::complete(tempnomiss, 1)
mahal <- mahalanobis(construal.data.short,
colMeans(construal.data.short, na.rm = T),
cov(construal.data.short, use = "pairwise.complete.obs"))
#Create the Mahalanobis values:
mahal <- mahalanobis(construal.data.short,
colMeans(construal.data.short, na.rm = T),
cov(construal.data.short, use = "pairwise.complete.obs"))
#Create the cut off score:
cutoff <- qchisq(1-.001,ncol(construal.data.short))
#Remember you can use:
#cutoff to get the cutoff score
#ncol(dataset) to get the df
#noutliers?
summary(mahal < cutoff)
#29 outliers
noout <- na.omit(subset(nomiss, mahal < cutoff))
correl <- cor(construal.data.short, use = 'pairwise.complete.obs')
#Get the symbols chart:
symnum(correl)
#check if enough correlation
cortest.bartlett(correl, n = nrow(construal.data.short))
#KMO (Kaiser-Meyer-Olkin) test determines if you have a good sample for EFA. You want high values close to one.
KMO(correl)
parallel <- fa.parallel(noout, fm = 'minres', fa = 'fa')
twofactor <- fa(noout,nfactors = 2,rotate = "oblimin",fm="minres")
print(twofactor)
print(twofactor$loadings,cutoff = 0.3) # use. .3 as a cut-off for loadings. bad fit, 3 cross-loadings.
#'move to 3 factors
threefactor <- fa(noout,nfactors = 3,rotate = "oblimin",fm="minres")
threefactor
print(threefactor$loadings,cutoff = 0.3)  # TLI = .858 / RMSEA   = 047, 1 cross-loading.
#'move to 5 factors
fivefactor <- fa(noout,nfactors = 5,rotate = "oblimin",fm="minres")
fivefactor
print(fivefactor$loadings,cutoff = 0.3)  # TLI = 904 / RMSEA   = .039, 1 cross-loading.
print(twofactor$loadings,cutoff = 0.3) # use. .3 as a cut-off for loadings. TLI = .823 / RMSEA   = .053, 1 cross-loading.
print(threefactor$loadings,cutoff = 0.3)  # TLI = .858 / RMSEA   = .047, 5 cross-loadings.
